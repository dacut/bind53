{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Serve Route 53 hosted zones over BIND",

    "Metadata": {
        "LastUpdated": "2016-05-25"
    },

    "Mappings": {
        "AmazonLinux": {
            "ap-northeast-1":   { "HVM64": "ami-1a15c77b" },
            "ap-northeast-2":   { "HVM64": "ami-a04297ce" },
            "ap-south-1":       { "HVM64": "ami-cacbbea5" },
            "ap-southeast-1":   { "HVM64": "ami-7243e611" },
            "ap-southeast-2":   { "HVM64": "ami-55d4e436" },
            "eu-central-1":     { "HVM64": "ami-0044b96f" },
            "eu-west-1":        { "HVM64": "ami-d41d58a7" },
            "sa-east-1":        { "HVM64": "ami-b777e4db" },
            "us-east-1":        { "HVM64": "ami-c481fad3" },
            "us-east-2":        { "HVM64": "ami-71ca9114" },
            "us-gov-west-1":    { "HVM64": "ami-7b4df41a" },
            "us-west-1":        { "HVM64": "ami-de347abe" },
            "us-west-2":        { "HVM64": "ami-b04e92d0" }
        }
    },

    "Parameters": {
        "KeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "EC2 keypair used to log into the instance for maintenance.",
            "MinLength": "1"
        },

        "HostedZoneIds": {
            "Type": "List<AWS::Route53::HostedZone::Id>",
            "Description": "The hosted zones to read from Route 53."
        },

        "SubnetIds": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "The subnets the instance may launch in."
        },

        "SecurityGroupIds": {
            "Type": "List<AWS::EC2::SecurityGroup::Id>",
            "Description": "The security groups to attach to the instance."
        },

        "InstanceType": {
            "Type": "String",
            "Default": "t2.nano",
            "Description": "The instance type to use.",
            "AllowedValues": [
                "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge",
                "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge",
                "cc2.8xlarge",
                "cr1.8xlarge",
                "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge",
                "g2.2xlarge", "g2.8xlarge",
                "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge",
                "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge",
                "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge",
                "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge",
                "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large"
            ]
        }
    },

    "Resources": {
        "IamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": { "Service": [ "ec2.amazonaws.com" ] },
                            "Action": [ "sts:AssumeRole" ]
                        }
                    ]
                },
                "Policies": [{
                    "PolicyName": "Bind53",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Sid": "Route53Actions",
                                "Effect": "Allow",
                                "Action": [ "route53:GetHostedZone", "route53:ListResourceRecordSets" ],
                                "Resource": "*"
                            },
                            {
                                "Sid": "EIPActions",
                                "Effect": "Allow",
                                "Action": [ "ec2:AssociateAddress" ],
                                "Resource": "*"
                            }
                        ]
                    }
                }]
            }
        },

        "IamProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ {"Ref":"IamRole"} ]
            }
        },

        "EIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": { "Domain": "vpc" }
        },

        "LaunchConfig2": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "DependsOn": [ "EIP" ],
            "Properties": {
                "AssociatePublicIpAddress": "true",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": "true",
                            "VolumeSize": "20",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "IamInstanceProfile": {"Ref":"IamProfile"},
                "ImageId": { "Fn::FindInMap": ["AmazonLinux", {"Ref":"AWS::Region"}, "HVM64"] },
                "InstanceMonitoring": "true",
                "InstanceType": {"Ref":"InstanceType"},
                "KeyName": {"Ref":"KeyName"},
                "SecurityGroups": {"Ref":"SecurityGroupIds"},
                "UserData": {"Fn::Base64": {"Fn::Join": ["", [
                    "#!/bin/bash\n",
                    "md='http://169.254.169.254/latest/meta-data'\n",
                    "# Configure the AWS region for the CLI\n",
                    "mkdir -p /root/.aws\n",
                    "cat > /root/.aws/config <<.EOF\n",
                    "[default]\n",
                    "region = ", {"Ref":"AWS::Region"}, "\n",
                    ".EOF\n",
                    "# Reassociate the EIP to us.\n"
                    "aws ec2 associate-address --instance-id $iid --allocation-id ",
                    {"Fn::GetAtt": ["EIP", "AllocationId"]}, " --allow-reassociation\n",
                    "# Update OS packages\n",
                    "yum -y update\n",
                    "# Install BIND and Git\n"
                    "yum -y install bind git\n",
                    "# Fix BIND configuration\n",
                    "sed -e 's/listen-on .*/listen-on port 53 { any; };/' ",
                    "-e 's/listen-on-v6.*/listen-on-v6 port 53 { any; };/' ",
                    "-e 's/allow-query .*/allow-query { any; };/' ",
                    "-e 's/recursion yes;//' ",
                    "/etc/named.conf > /etc/named.conf.new\n",
                    "echo 'include \"/etc/bind53.conf\";' >> /etc/named.conf.new\n",
                    "mv /etc/named.conf /etc/named.conf.orig\n",
                    "mv /etc/named.conf.new /etc/named.conf\n",
                    "# Get the Bind53 utilities from GitHub\n",
                    "cd /tmp\n",
                    "git clone 'https://github.com/dacut/bind53.git'\n",
                    "# Build/install the Bind53 utilities\n",
                    "cd bind53\n",
                    "./setup.py install\n",
                    "cd /\n",
                    "rm -r /tmp/bind53\n",
                    "# Run Bind53 to convert Route 53 hosted zones to a BIND file.\n",
                    "/usr/local/bin/bind53 --output '/var/named/%(zone_name)szone' ",
                    "--kick ", {"Fn::Join": [" ", {"Ref":"HostedZoneIds"}]},
                    " >> /var/log/bind53.log 2>&1\n",
                    "# Tell cron to rerun this every 5 minutes.\n",
                    "crontab - <<.EOF\n",
                    "*/5 * * * * /usr/local/bin/bind53 --output '/var/named/\\%(zone_name)szone' --kick ",
                    {"Fn::Join": [" ", {"Ref":"HostedZoneIds"}]}, " >> /var/log/bind53.log 2>&1\n",
                    ".EOF\n",
                    "iid=`curl -s $md/instance-id`\n",
                    "# Restart BIND\n",
                    "service named restart\n",
                    ""
                    ]]}}
            }
        },

        "AutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "DependsOn": [ "LaunchConfig2" ],
            "Properties": {
                "DesiredCapacity": "1",
                "LaunchConfigurationName": {"Ref":"LaunchConfig2"},
                "MaxSize": "1",
                "MinSize": "1",
                "Tags": [ {"Key": "Name", "Value": "Bind53", "PropagateAtLaunch": "true" }],
                "VPCZoneIdentifier": {"Ref":"SubnetIds"}
            },
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MaxBatchSize": "10",
                    "MinInstancesInService": "0"
                }
            }
        }
    },

    "Outputs": {
        "PublicIP": {
            "Description": "Elasitc IP allocation for the BIND server",
            "Value": {"Ref":"EIP"}
        }
    }
}
